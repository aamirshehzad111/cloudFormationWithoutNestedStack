  AWSTemplateFormatVersion: 2010-09-09
  Description: 'Mapping for EC2 Instance' 

  Parameters:
    
    NetworkStackParameter: 
      Type: String
      Default: aamirAPPLBStack
 
    VPCZoneIdentifier:
      Description: Name of an existing AZs for the EC2 instance
      Type: List<AWS::EC2::Subnet::Id>  
      ConstraintDescription: must be a valid name  

    SG: 
      Description: Name of an Security Group for the EC2 instance
      Type: AWS::EC2::SecurityGroup::Id
      ConstraintDescription: must be a valid name 
    KeyName: 
      Description: Name of an existing EC2 key pair for SSH access to the EC2 instance
      Type: AWS::EC2::KeyPair::KeyName
      Default: aamirKP1
      ConstraintDescription: must be the name of an existing EC2 KeyPair
    RoleName: 
      Description: Role description
      Type: String
      Default: "S3AdminAccess"
      ConstraintDescription: Must be a valid IAM Role
      
    InstaceTypeParam:
      Type: String
      Default: t2.micro
      AllowedValues: 
        - t2.micro
        - m3.medium
        - m3.large
        - c3.large
        - c3.xlarge
      ConstraintDescription: Must be one of them
  Mappings:
    EC2RegionMapping:
      us-east-1:
        AMIs: ami-0ff8a91507f77f867
      us-west-1:
        AMIs: ami-0bdb828fd58c52235
      eu-west-1:
        AMIs: ami-047bb4163c506cd98
      ap-northeast-1:
        AMIs: ami-06cd52961ce9f0d85
      ap-southeast-1:
        AMIs: ami-08569b978cc4dfa10




    
  Resources:
    AutoScalingGroup:
      Type: AWS::AutoScaling::AutoScalingGroup
      Properties:
        AutoScalingGroupName: aamirAppAutoscalingGroup
        Cooldown: '300'
        DesiredCapacity: '2'
        HealthCheckGracePeriod: 60
        HealthCheckType: 'ELB'
        LaunchConfigurationName: !Ref "LaunchConfig"
        MaxSize: '2'
        MinSize: '2'

        TargetGroupARNs: 
          - Fn::ImportValue: 
              !Sub "${NetworkStackParameter}-DefaultTargetGroup" 
        TerminationPolicies: 
          - "Default"
        Tags:
          - Key: Name
            Value: aamirAutoSG
            PropagateAtLaunch: 'true'
        VPCZoneIdentifier:
          Ref: VPCZoneIdentifier

    LaunchConfig: 
      Type: AWS::AutoScaling::LaunchConfiguration
      Properties: 
        IamInstanceProfile: !Ref "RoleName"
        InstanceType: !Ref "InstaceTypeParam"
        KeyName: !Ref "KeyName"
        ImageId: !FindInMap
          - EC2RegionMapping 
          - !Ref AWS::Region 
          - AMIs
        SecurityGroups:
          - Ref: "SG"

        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            yum update -y
            yum install httpd php php-mysql -y
            cd /var/www/html
            mkdir StudentDataApp
            cd StudentDataApp/
            echo "<html><p>Healthy</p></html>" > health.html
            service httpd start
            chkconfig httpd on
                               



  Outputs: 
    AutoscalingGroup: 
      Description: "The newly created asg"
      Value: 
        Ref: "AutoScalingGroup"
    LaunchConfig:
      Description: "the newly created launch config"
      Value:
        Ref: "LaunchConfig"
